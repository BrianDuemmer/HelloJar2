<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="clean" name="Create Runnable Jar for Project helloJar2">
	

    <property name="dir.buildfile" value="."/>
    <property name="dir.workspace" value="${dir.buildfile}/.."/>
    <property name="dir.jarfile" value="${dir.buildfile}"/>
	
	<property name="target.ip" value="pi-223-0.local"/>
	<property name="target.sshPort" value="5809"/>
	<property name="target.user" value="pi"/>
	<property name="target.pass" value="223pi"/>

	<property name="target.path" value="/home/pi/223/bin"/>
	<property name="target.jarName" value="helloJar.jar"/>
	<property name="target.debugPort" value="5810"/>
	
	
	<path id="build.classpath">
	    <fileset dir="${basedir}/lib">
	        <include name="**/*.jar"/>
	    </fileset>
	</path>

	
	
	<!-- Create the jar file -->	
    <target name="create_jar" depends="compile">
        <jar destfile="${dir.jarfile}/${target.jarName}" filesetmanifest="skip">
        	<classpath>
        		<pathelement location="${basedir}/bin"/>
        		<path refid="build.classpath" />
    		</classpath>
            <manifest>
                <attribute name="Main-Class" value="pack.MainClass"/>
                <attribute name="Class-Path" value="build.classpath"/>
            </manifest>
        </jar>
    </target>
	
	
	<!-- Cleans up the old class files and jar files -->
	<target name="clean">
		<delete file="${dir.jarfile}/${target.jarName}"/>
		<delete dir="bin"/>
	</target>
	
	
	<!-- compiles the sorce code into class files -->
	<target name="compile" depends="clean" >
		<mkdir dir="bin"/>
		<javac srcdir="src" destdir="bin" classpathref="build.classpath" debug="on" includeantruntime="yes"/>
		<echo>Finished compiling source code</echo>
	</target>
	
	
	<!-- Runs the jar locally-->
	<target name="run_jar" depends="create_jar">
		<java jar="${dir.jarfile}/${target.jarName}" fork="true"/>
	</target>
	
	
	
	<!-- Deploy the jar to the target, and configure it to run normally. Invokes "runJar.sh" to manage the java initialization.
		 runJar.sh should be in the same directory as the ${target.path} -->
	<target name="deploy_jar" depends="create_jar">
		
		<scp file="${dir.jarfile}/${target.jarName}"
			todir="${target.user}@${target.ip}: ${target.path}/${target.jarName}"
			password="${target.pass}"
			trust="true" 
			port="${target.sshPort}"/>
		
		<sshexec host="${target.ip}"
			username="${target.user}"
			password="${target.pass}"
			port="${target.sshPort}"
			trust="true"
			failonerror="true"
			command="sh ${target.path}/runJar.sh -o ${target.path}/log.txt -a ${target.path}/${target.jarName}" />
	</target>
	
	
	
	<!-- Deploy the jar to the target, and configure it to accept a debugger connection. Invokes "runJar.sh" to manage the java initialization.
		 runJar.sh should be in the same directory as the ${target.path} -->
	<target name="debug_deploy">
		<scp file="${dir.jarfile}/${target.jarName}"
			todir="${target.user}@${target.ip}: ${target.path}/${target.jarName}"
			password="${target.pass}"
			port="${target.sshPort}"
			trust="true" />
		
		<sshexec host="${target.ip}"
			username="${target.user}"
			password="${target.pass}"
			trust="true"
			port="${target.sshPort}"
			failonerror="true"
			command="sh ${target.path}/runJar.sh -o ${target.path}/log.txt -a -d ${target.debugPort} ${target.path}/${target.jarName}" />
		
		<echo message="Now hit the debug button to connect and start the debugging session"/>
	</target>
</project>
